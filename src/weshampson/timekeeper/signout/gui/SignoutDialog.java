
package weshampson.timekeeper.signout.gui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import weshampson.commonutils.logging.Level;
import weshampson.commonutils.logging.Logger;
import weshampson.timekeeper.activity.ActivityLogger;
import weshampson.timekeeper.signout.Signout;
import weshampson.timekeeper.signout.SignoutException;
import weshampson.timekeeper.signout.SignoutManager;
import weshampson.timekeeper.tech.Tech;

/**
 *
 * @author  Wes Hampson
 * @version 0.3.0 (Nov 23, 2014)
 * @since   0.2.0 (Jul 30, 2014)
 */
public class SignoutDialog extends javax.swing.JDialog {
    private DefaultComboBoxModel<String> signoutDateComboBoxModel;
    private final Tech tech;

    /** Creates new form SignoutDialog */
    public SignoutDialog(Tech tech, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initSignoutDateComboBox();
        this.tech = tech;
        signoutReasonTextField.requestFocus();
    }
    @SuppressWarnings("unchecked")
    private void initSignoutDateComboBox() {
        signoutDateComboBoxModel = new DefaultComboBoxModel<>();
        GregorianCalendar calendar = new GregorianCalendar();
        for (int i = 0; i < 13; i++) {
            signoutDateComboBoxModel.addElement(new SimpleDateFormat("EEEE, MMMM dd, yyyy").format(calendar.getTime()));
            calendar.add(calendar.DATE, 1);
        }
        signoutDateComboBox.setModel(signoutDateComboBoxModel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signoutDateLabel = new javax.swing.JLabel();
        signoutDateComboBox = new javax.swing.JComboBox();
        signoutReasonLabel = new javax.swing.JLabel();
        signoutReasonTextField = new javax.swing.JTextField();
        signOutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sign Out");

        signoutDateLabel.setText("Signout date:");

        signoutReasonLabel.setText("Reason for signing out:");

        signoutReasonTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutReasonTextFieldActionPerformed(evt);
            }
        });

        signOutButton.setText("Sign Out");
        signOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 245, Short.MAX_VALUE)
                        .addComponent(signOutButton))
                    .addComponent(signoutDateComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signoutReasonTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signoutDateLabel)
                            .addComponent(signoutReasonLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(signoutDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signoutDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signoutReasonLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signoutReasonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(signOutButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutButtonActionPerformed
        try {
            if (signoutReasonTextField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter a reason for signing out.", "Signout Reason Required", JOptionPane.ERROR_MESSAGE);
                signoutReasonTextField.requestFocus();
                return;
            }
            Signout s = new Signout(tech.getID(), new SimpleDateFormat("EEEE, MMMM dd, yyyy").parse((String)signoutDateComboBox.getSelectedItem()), signoutReasonTextField.getText());
            Calendar now = Calendar.getInstance();
            Calendar scheduledSignoutDate = Calendar.getInstance();
            scheduledSignoutDate.setTime(s.getScheduledSignoutDate());
            for (Signout existingSignout : SignoutManager.getSignoutList()) {
                if (existingSignout.getTechID() == tech.getID()) {
                    Calendar existingSignoutDate = Calendar.getInstance();
                    existingSignoutDate.setTime(existingSignout.getScheduledSignoutDate());
                    if (scheduledSignoutDate.get(Calendar.YEAR) == existingSignoutDate.get(Calendar.YEAR)
                    && scheduledSignoutDate.get(Calendar.DAY_OF_YEAR) == existingSignoutDate.get(Calendar.DAY_OF_YEAR)) {
                        JOptionPane.showMessageDialog(this, "You are already signed out for this day!", "Already Signed Out", JOptionPane.WARNING_MESSAGE);
                        signoutDateComboBox.requestFocus();
                        return;
                    }
                }
            }
            SignoutManager.addSignout(s);
            ActivityLogger.logActivity(ActivityLogger.Action.SIGNOUT_ENTRY_ADD, tech, tech.getName() + " added signout entry for " + new SimpleDateFormat("EEE, MMM. dd, yyyy").format(s.getScheduledSignoutDate()) + ". Reason: " + s.getSignoutReason());
            if (scheduledSignoutDate.get(Calendar.YEAR) == now.get(Calendar.YEAR)
                && scheduledSignoutDate.get(Calendar.DAY_OF_YEAR) == now.get(Calendar.DAY_OF_YEAR)) {
                tech.signOut();
                ActivityLogger.logActivity(ActivityLogger.Action.SIGNOUT_EXECUTE, tech, tech.getName() + " is signed out for today. Reason: " + s.getSignoutReason());
            }
            dispose();
        } catch (ParseException ex) {
            Logger.log(Level.ERROR, ex, null);
        } catch (SignoutException ex) {
            Logger.log(Level.ERROR, ex, "Failed to create signout entry - " + ex.toString());
            JOptionPane.showMessageDialog(this, "Failed to create signout:\n"
                    + ex.toString(), "Error Creating Signout Entry", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_signOutButtonActionPerformed

    private void signoutReasonTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutReasonTextFieldActionPerformed
        signOutButtonActionPerformed(evt);
    }//GEN-LAST:event_signoutReasonTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton signOutButton;
    private javax.swing.JComboBox signoutDateComboBox;
    private javax.swing.JLabel signoutDateLabel;
    private javax.swing.JLabel signoutReasonLabel;
    private javax.swing.JTextField signoutReasonTextField;
    // End of variables declaration//GEN-END:variables
}